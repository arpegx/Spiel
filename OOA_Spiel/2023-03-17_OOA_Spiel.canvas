{
	"nodes":[
		{"type":"group","id":"f5227ccee76e3527","x":220,"y":-3604,"width":2690,"height":2044,"label":"Spiel"},
		{"type":"group","id":"da1264e6bb90d462","x":280,"y":-3020,"width":965,"height":888,"label":"Spezies"},
		{"type":"group","id":"3f435b6606431585","x":1493,"y":-3020,"width":1380,"height":560,"color":"3","label":"Einheiten"},
		{"type":"group","id":"88fde7a8e6d56cf4","x":1565,"y":-2360,"width":715,"height":640,"color":"#625050","label":"Ressource"},
		{"type":"group","id":"a44b4d3172bd3e48","x":300,"y":-3500,"width":965,"height":285,"label":"Feature"},
		{"type":"group","id":"71659898fe5f5952","x":1493,"y":-3500,"width":747,"height":285,"label":"Producer"},
		{"type":"text","text":"Alle Einheiten haben unter anderem folgende Methoden:\n\n+ hit(int points)  -> zieht dem Schild/der Einheit Punkte ab\n+ loadShield(int points) -> lade das Schild auf(maximal bis anz Schildpunkte)\n\n\nDie Rassen und Einheiten haben NUR die hier beschriebenen Eigenschaften\nund Fähigkeiten/Methoden - um alle anderen Aspekte werden sich andere Entwickler Ihres Teams kümmern. ","id":"e65fb97ba865acc9","x":2353,"y":-2770,"width":500,"height":290},
		{"type":"text","text":"Alle Einheiten haben einen Schild(eine bestimmte Anzahl an \"freien\" Trefferpunkten) -\nsolange das Schild > 0 ist, werden die Treffer nicht als volle Treffer gezählt, sondern lediglich vom Schild abgezogen. Erst wenn das Schild 0 \nTrefferpunkte hat, werden die Trefferpunkte von der Lebensenergie der Einheiten selbst abgezogen. Wenn die Einheit keine Lebensenergie mehr hat, gilt die\nEinheit als zerstört(Die Einheit wird aus dem Spiel genommen).","id":"ac0e39e13b53f551","x":2353,"y":-3000,"width":500,"height":214,"color":"2"},
		{"type":"text","text":"Alle Einheiten benötigen für ihre\nProduktion genauso viele Minearalien, wie die Anzahl der Lebenspunkte der Einheit und genauso viel Gas, wie die Anzahl der Schildpunkte der zu produzierenden Einheit.\n#produziereEinheit()","id":"1b4f4bf24e8df049","x":300,"y":-2980,"width":300,"height":300},
		{"type":"text","text":"# Class\nProducer-Klasse #Delegator\n","id":"d6673823275941a4","x":1513,"y":-3440,"width":320,"height":90},
		{"type":"text","text":"# Class\nRasse im Gesamtspiel\n\n## Property\n-> Sammlung an aktiven Einheiten\n-> Bezeichnung\n-> Menge an Ressourcen\n\n## Methode\n#Delegator : produziereEinheit()\n#Delegator: checkUnit()\n#Delegator : removeUnit()\naddEinheit()","id":"13d1ddb82eef6f3a","x":646,"y":-2978,"width":385,"height":405},
		{"type":"text","text":"# Class\nProtoss\n","id":"9c6116402342fe39","x":431,"y":-2372,"width":241,"height":110},
		{"type":"text","text":"# Class\nZerg","id":"3341515237ce908e","x":698,"y":-2372,"width":234,"height":110},
		{"type":"text","text":"# Class\nTerraner","id":"7eedfa18dfb06fcf","x":972,"y":-2372,"width":235,"height":110},
		{"type":"text","text":"# Object\n## Einheiten\n\nCorsair -> Schildpunkte: 20, Lebenspunkte: 150\nCarrier -> Schildpunkte: 250, Lebenspunkte: 1500\nProbe -> Schildpunkte: 5, Lebenspunkte: 50\nScout -> Schildpunkte: 200, Lebenspunkte: 800\nShuttle -> Schildpunkte: 60, Lebenspunkte: 400","id":"8eba5584b1f9e018","x":431,"y":-2089,"width":241,"height":495,"color":"3"},
		{"type":"text","text":"# Object\n## Einheiten\n\nMutalisk -> Schildpunkte: 60, Lebenspunkte: 800\nQueen -> Schildpunkte: 250, Lebenspunkte: 1500\nGuardian -> Schildpunkte: 20, Lebenspunkte: 2000\nLurker -> Schildpunkte: 200, Lebenspunkte: 500\nOverloard -> Schildpunkte: 60, Lebenspunkte: 400","id":"707fe918937764f0","x":698,"y":-2089,"width":234,"height":495,"color":"3"},
		{"type":"text","text":"# Object\n## Einheiten\n\nBattlecruiser -> Schildpunkte: 600, Lebenspunkte: 2000\nGoliath -> Schildpunkte: 250, Lebenspunkte: 1200\nValkyrie -> Schildpunkte: 40, Lebenspunkte: 800\nTank -> Schildpunkte: 300, Lebenspunkte: 800\nStarcruiser -> Schildpunkte: 250, Lebenspunkte: 2000","id":"7f346c91361fe8dd","x":972,"y":-2089,"width":235,"height":495,"color":"3"},
		{"type":"text","text":"Für das Entfernen von zerstörten Einheiten aus dem Einheitenverbund bietet eine Feature-Klasse eine Methode an, welche die vorhandenen Einheiten jeder Rasse\nüberprüft und zerstörte Einheiten entfernt. Die Rassen können also diesen Dienst an die Feature-Klasse delegieren. Von der Feature-Klasse soll es nur ein\neinziges Objekt geben können.","id":"0652a274a25c34aa","x":815,"y":-3480,"width":432,"height":245,"color":"3"},
		{"type":"text","text":"# Class \nFeature-Klasse #Singleton #Delegator\n\n## Method\ncheckUnit()\nremoveUnit()","id":"444cdfb2dd621a2f","x":320,"y":-3480,"width":443,"height":220},
		{"type":"text","text":"Wenn eine Rasse eine Einheit verliert und für die Neuproduktion dieser Einheit genügend Ressourcen vorhanden sind, delegiert die Rasse die Produktion der zu\nersetzenden Einheit an eine Producer-Klasse. ","id":"27cfe12fc8fb49d2","x":1851,"y":-3480,"width":352,"height":245,"color":"3"},
		{"type":"text","text":"# Class\nFahrzeug- und Flugeinheitentypen","id":"f094c7f14eaf4c66","x":1531,"y":-2978,"width":320,"height":130},
		{"type":"text","text":"# Aufgabenstellung\n\nSie sind Entwickler in einer Softwareschmiede für Echtzeitstrategiespiele. Im aktuellen Projekt entwickeln Sie einen Ausschnitt der\nGesamtsoftware im Bereich des Back-Ends. Ihr Modul soll eine OOP-Struktur anderen Modulen anbieten welche folgende Anforderungen abdeckt:\n\nJede Rasse im Gesamtspiel hat ihre spezifische Fahrzeug- und Flugeinheitentypen(Einheiten). Ihr Modul soll die Klassen für diese Einheiten bereit stellen\nmit ihren wichtigsten Eigenschaften und Fähigkeiten. \n\nSobald die maximale Anzahl der Trefferpunkte überschritten wurde, soll eine Einheit \"zerstört\" werden. Dazu hält jede Rasse jeweils\neine Sammlung mit alle ihren aktuell im Spiel aktiven Einheiten. \n\nEs gibt die Rassen Protoss, Zerg und Terraner.  \n\n\nAlle Rassen haben natürlich eine Bezeichnung und eine bestimmte Menge an Ressourcen. Ressourcen sind Gas und Mineralien. Alle Einheiten benötigen für ihre\nProduktion genauso viele Minearalien, wie die Anzahl der Lebenspunkte der Einheit und genauso viel Gas, wie die Anzahl der Schildpunkte der zu produzierenden Einheit.\n\nJede Rasse hat ihre spezielle Flotte an Einheiten. Alle Einheiten haben einen Schild(eine bestimmte Anzahl an \"freien\" Trefferpunkten) -\nsolange das Schild > 0 ist, werden die Treffer nicht als volle Treffer gezählt, sondern lediglich vom Schild abgezogen. Erst wenn das Schild 0 \nTrefferpunkte hat, werden die Trefferpunkte von der Lebensenergie der Einheiten selbst abgezogen. Wenn die Einheit keine Lebensenergie mehr hat, gilt die\nEinheit als zerstört(Die Einheit wird aus dem Spiel genommen).\n\n\nFür das Entfernen von zerstörten Einheiten aus dem Einheitenverbund bietet eine Feature-Klasse eine Methode an, welche die vorhandenen Einheiten jeder Rasse\nüberprüft und zerstörte Einheiten entfernt. Die Rassen können also diesen Dienst an die Feature-Klasse delegieren. Von der Feature-Klasse soll es nur ein\neinziges Objekt geben können.\n\nWenn eine Rasse eine Einheit verliert und für die Neuproduktion dieser Einheit genügend Ressourcen vorhanden sind, delegiert die Rasse die Produktion der zu\nersetzenden Einheit an eine Producer-Klasse. \n\n\nAlle Rassen bekommen von einer Ressource-Klasse mitgeteilt, wieviele Mineralien/wieviel Gas aktuell verfügbar sind/ist, wenn neue verfügbar sind. \nDie Ressource-Klasse bietet den Rassen-Objekten an, sich bei ihr zu registrieren um Änderungen über die verfügbaren Ressourcen mitgeteilt zu bekommen -> Observer. (Das Steuern der vorhandenen Ressourcenmengen ist nicht Teil Ihres\nModuls - darum kümmert sich ein anderes Team).\n\n\n\n\nÜberblick über die Einheiten:\n\n\nProtoss:\n--------\n\nCorsair -> Schildpunkte: 20, Lebenspunkte: 150\nCarrier -> Schildpunkte: 250, Lebenspunkte: 1500\nProbe -> Schildpunkte: 5, Lebenspunkte: 50\nScout -> Schildpunkte: 200, Lebenspunkte: 800\nShuttle -> Schildpunkte: 60, Lebenspunkte: 400\n\n\nZerg:\n--------\n\nMutalisk -> Schildpunkte: 60, Lebenspunkte: 800\nQueen -> Schildpunkte: 250, Lebenspunkte: 1500\nGuardian -> Schildpunkte: 20, Lebenspunkte: 2000\nLurker -> Schildpunkte: 200, Lebenspunkte: 500\nOverloard -> Schildpunkte: 60, Lebenspunkte: 400\n\n\nTerraner:\n--------\n\nBattlecruiser -> Schildpunkte: 600, Lebenspunkte: 2000\nGoliath -> Schildpunkte: 250, Lebenspunkte: 1200\nValkyrie -> Schildpunkte: 40, Lebenspunkte: 800\nTank -> Schildpunkte: 300, Lebenspunkte: 800\nStarcruiser -> Schildpunkte: 250, Lebenspunkte: 2000\n\nAlle Rassen haben unter anderem folgende Methoden:\n\n+ addEinheit\n\n\nAlle Einheiten haben unter anderem folgende Methoden:\n\n+ hit(int points)  -> zieht dem Schild/der Einheit Punkte ab\n+ loadShield(int points) -> lade das Schild auf(maximal bis anz Schildpunkte)\n\n\nDie Rassen und Einheiten haben NUR die hier beschriebenen Eigenschaften\nund Fähigkeiten/Methoden - um alle anderen Aspekte werden sich andere Entwickler Ihres Teams kümmern. Hier soll auch KEINE aktive Spiel-Steuer-Logik implementiert werden!\nSie sollen anderen Team-Mitgliedern lediglich die dafür benötigten Klassen zur Verfügung stellen.\n\nEntwerfen Sie ein Klassenmodell, welches die beschriebenen Anforderungen abdeckt. Sorgen Sie für eine möglichst flexible und erweiterbare/bequem von \"aussen\" nutzbare\nKlassenstruktur. Setzen Sie dafür entsprechende OOP-Konzepte/Entwurfsmuster ein.\n\nSetzen Sie anschliessend das Modell in Javacode um.\n\n\n\n","id":"360b0f2a98f1c500","x":-680,"y":-3660,"width":860,"height":2100},
		{"type":"text","text":"# Pflichtenheft\n\n## Setting\n\nSie sind Entwickler in einer Softwareschmiede für Echtzeitstrategiespiele. Im aktuellen Projekt entwickeln Sie einen Ausschnitt der Gesamtsoftware im Bereich des Back-Ends. Ihr Modul soll eine OOP-Struktur anderen Modulen anbieten.\n\n\n## Pflichten\n\n### 1. Klassenmodell erstellen\n- 1.2 Ihr Modul soll die Klassen für diese Einheiten bereit stellen mit ihren wichtigsten Eigenschaften und Fähigkeiten\n- 1.3 moeglichst flexible und erweiterbare/bequem von \"aussen\" nutzbare Klassenstruktur\n- 1.4 Verwendung von OOP-Konzepten/Entwurfsmustern\n\n### 2. Setzen Sie anschliessend das Modell in Javacode um.\n\n\n## Abgrenzungskriterien\n\n-> Die Rassen und Einheiten haben NUR die hier beschriebenen Eigenschaften und Fähigkeiten/Methoden - um alle anderen Aspekte werden sich andere Entwickler Ihres Teams kümmern.\n\n->  Hier soll auch KEINE aktive Spiel-Steuer-Logik implementiert werden!\n\n-> Das Steuern der vorhandenen Ressourcenmengen ist nicht Teil Ihres Moduls","id":"500fd18ffa0452ff","x":2960,"y":-3644,"width":860,"height":674,"color":"6"},
		{"type":"text","text":"# Note: istZerstoert\n\n-> Property oder methode ... an den observer weitergeben ..","id":"73a0bd4b7801d868","x":2353,"y":-3235,"width":350,"height":175,"color":"5"},
		{"type":"text","text":"# Documentation\n\n## Design Pattern\n\n### #Singleton\n\tFuer die Implementierung der Feature-Klasse wird das Singleton-Pattern verwendet.\n\n### #Observer\n\tEinen Observer bietet die Klasse Ressourcen an um den Spezien mitzuteilen was der aktuelle Stand ist.\n\n### #Delegator\n\t1. Die Spezien delegieren die Produktion von Einheiten an eine Producer-Klasse.\n\t2. Die Spezien delegieren das entfernen zerstoerter Einheiten an eine Feature-Klasse.","id":"66f80b3979fcdd9c","x":2960,"y":-2913,"width":860,"height":433,"color":"#f9f586"},
		{"type":"text","text":"Alle Rassen bekommen von einer Ressource-Klasse mitgeteilt, wieviele Mineralien/wieviel Gas aktuell verfügbar sind/ist, wenn neue verfügbar sind. \nDie Ressource-Klasse bietet den Rassen-Objekten an, sich bei ihr zu registrieren um Änderungen über die verfügbaren Ressourcen mitgeteilt zu bekommen -> Observer. (Das Steuern der vorhandenen Ressourcenmengen ist nicht Teil Ihres\nModuls - darum kümmert sich ein anderes Team).","id":"c6326e350c16411f","x":1586,"y":-2000,"width":664,"height":232},
		{"type":"text","text":"! Fixme : istZerstoert\n","id":"41f153adcb864a00","x":1531,"y":-2800,"width":340,"height":60,"color":"1"},
		{"type":"text","text":"# Class\nEinheit\n\n## Property\n-> Lebenspunkte\n-> Schildpunkte\n## Methode\n\n-> hit(int points)\n-> loadShield(int points)","id":"883c75c4cdf8388a","x":2000,"y":-2963,"width":302,"height":327,"color":"2"},
		{"type":"text","text":"# Class\nRessource #Observer","id":"a67f82902a121180","x":1598,"y":-2340,"width":320,"height":90},
		{"type":"text","text":"Observer","id":"947a59c020277fc2","x":1633,"y":-2120,"width":250,"height":60},
		{"type":"text","text":"Gas","id":"ee7e5c285de81c05","x":2040,"y":-2250,"width":170,"height":56},
		{"type":"text","text":"Mineralien","id":"839f863aab9a3db9","x":2040,"y":-2320,"width":170,"height":50},
		{"type":"text","text":"# Note:\n\n-> Listener auch noch einbauen ??\n-> wie war das nochmal mit Observer ?\n-> Ressourcen-Einheit (int?)","id":"a49e930b46c0f004","x":2440,"y":-2367,"width":413,"height":145,"color":"5"},
		{"id":"7dac72dac45193cf","x":1260,"y":-1710,"width":250,"height":116,"color":"5","type":"text","text":"# Note:\nWie findet die zuordnung statt?"}
	],
	"edges":[
		{"id":"1bf62e2484221c3a","fromNode":"f094c7f14eaf4c66","fromSide":"right","toNode":"883c75c4cdf8388a","toSide":"left","label":"ist"},
		{"id":"bf10caa6e07f348f","fromNode":"13d1ddb82eef6f3a","fromSide":"bottom","toNode":"9c6116402342fe39","toSide":"top","label":"ist"},
		{"id":"d7a9799886a25de8","fromNode":"13d1ddb82eef6f3a","fromSide":"bottom","toNode":"3341515237ce908e","toSide":"top","label":"ist"},
		{"id":"cd0c1389ea8e4567","fromNode":"13d1ddb82eef6f3a","fromSide":"bottom","toNode":"7eedfa18dfb06fcf","toSide":"top","label":"ist"},
		{"id":"feb7c7acb932010d","fromNode":"da1264e6bb90d462","fromSide":"right","toNode":"3f435b6606431585","toSide":"left","label":"hat"},
		{"id":"f855f73433df6df8","fromNode":"a67f82902a121180","fromSide":"right","toNode":"ee7e5c285de81c05","toSide":"left"},
		{"id":"52e99e31050bcec5","fromNode":"a67f82902a121180","fromSide":"right","toNode":"839f863aab9a3db9","toSide":"left","label":"ist"},
		{"id":"fedb93f09c91c50f","fromNode":"da1264e6bb90d462","fromSide":"right","toNode":"88fde7a8e6d56cf4","toSide":"left","label":"hat \n& \nregistrieren"},
		{"id":"38c7d1b7173b284f","fromNode":"3f435b6606431585","fromSide":"bottom","toNode":"88fde7a8e6d56cf4","toSide":"top","label":"kostet"},
		{"id":"3805dc3e2dc7dbb3","fromNode":"da1264e6bb90d462","fromSide":"top","toNode":"71659898fe5f5952","toSide":"bottom","label":"delegiert"},
		{"id":"a0298a14da87dfb5","fromNode":"71659898fe5f5952","fromSide":"bottom","toNode":"3f435b6606431585","toSide":"top","label":"produziert"},
		{"id":"6bf7df39d7debd6b","fromNode":"a67f82902a121180","fromSide":"bottom","toNode":"947a59c020277fc2","toSide":"top","label":"bietet"},
		{"id":"8d5e3ccbdea7f5de","fromNode":"9c6116402342fe39","fromSide":"bottom","toNode":"8eba5584b1f9e018","toSide":"top","label":"hat"},
		{"id":"a023458b4303ce21","fromNode":"3341515237ce908e","fromSide":"bottom","toNode":"707fe918937764f0","toSide":"top","label":"hat"},
		{"id":"e45657cf1411794c","fromNode":"7eedfa18dfb06fcf","fromSide":"bottom","toNode":"7f346c91361fe8dd","toSide":"top","label":"hat"},
		{"id":"fa5954558a8cf27b","fromNode":"a49e930b46c0f004","fromSide":"left","toNode":"88fde7a8e6d56cf4","toSide":"right"},
		{"id":"ae014af8d31c547c","fromNode":"73a0bd4b7801d868","fromSide":"left","toNode":"3f435b6606431585","toSide":"top"},
		{"id":"7810f733514a9c8d","fromNode":"da1264e6bb90d462","fromSide":"top","toNode":"a44b4d3172bd3e48","toSide":"bottom","label":"delegiert"},
		{"id":"487a8da624671889","fromNode":"7dac72dac45193cf","fromSide":"top","toNode":"7f346c91361fe8dd","toSide":"right"}
	]
}